
2023-11-19
- Initiated project setup for a notes webapp using Next.js and Supabase, focusing on the App Router model. Used default project settings with 'npx create-next-app@latest'.

- Created Supabase project, configured database tables. Enabled Row Level Security on 'notes' table and defined SQL policies.

- Integrated Supabase client into Next.js project. Addressed TypeScript types issue in 'signup.tsx'.

- Implemented user registration (signup) functionality. Resolved routing issues with new App Router model, using 'use client;' for Client Components.

- Developed login functionality. Updated method to 'signInWithPassword' as per Supabase API, fixed 'NextRouter not mounted' error with correct 'useRouter' hook.

- Created a 'protected' page for post-login user interaction. Ensured accessibility only for authenticated users, fixed TypeScript errors related to session and user data.

Notes:
- Ensured all components and functionalities align with the Next.js App Router model.
- Addressed TypeScript types and Supabase API updates for code reliability.
- Focused on error handling and user feedback in authentication processes.
2023-11-20

- Refactoring for Cookie-Based Authentication:
- Transitioned to cookie-based authentication using the @supabase/ssr package.
- Implemented and tested the signup, login, and logout functionalities.
- Ensured the protected route displays the logged-in user's username.
- Adjusted supabaseClient.js to initialize Supabase clients locally in each component, aligning with the Next.js App Router architecture.
- Resolved runtime JavaScript error related to dynamic require calls in dependencies by refining the client initialization approach.
- Conducted tests to confirm that the application's authentication flow functions correctly with cookie-based sessions.

- Understanding and Analyzing Authentication Mechanisms:
- Explored how PKCE (Proof Key for Code Exchange) is integrated into the signup process via email confirmation links.
- Investigated the authentication token cookie set by Supabase.
- Clarified the role of PKCE in securing the signup flow and the function of the access token within the cookie.
- Discussed the Supabase project identifier in the cookie and email confirmation link.

- Reviewing and Addressing Console Warnings:
- Addressed warnings regarding node-gyp-build and related dependencies in the console.
- Determined that the warnings were related to dynamic module resolution in the build process and did not impact application functionality.

- Expanding Knowledge on Session Management:
- Explored options for adjusting session cookie expiration and session refresh in Supabase.
- Learned about customizing the GoTrue client for cookie lifetime management, though decided not to implement custom management at this stage.

- Current Status:
- The application is functioning well with secure, cookie-based authentication.
- All major authentication features (signup, login, logout, protected routes) are operational and tested.
- The project is in a stable state, with a focus on security and robust authentication mechanisms.
